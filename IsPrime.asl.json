{
  "Comment": "Check if the number in the parameter 'x' is a prime number. Values of x from 1-1000 (inclusive) are supported.",
  "StartAt": "CheckNum",
  "States": {
    "CheckNum": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$",
          "IsNumeric": true,
          "Next": "Move number input"
        }
      ],
      "Default": "Add starting y"
    },
    "Add starting y": {
      "Type": "Pass",
      "Next": "Range",
      "Result": {
        "y": 2
      },
      "ResultPath": "$.proc"
    },
    "Move number input": {
      "Type": "Pass",
      "Parameters": {
        "x.$": "$",
        "proc": {
          "y": 2
        }
      },
      "Next": "Range"
    },
    "Range": {
      "Type": "Pass",
      "Parameters": {
        "arr.$": "States.ArrayRange(1, $.x, 1)",
        "y.$": "$.proc.y"
      },
      "ResultPath": "$.proc",
      "Next": "Partition"
    },
    "Partition": {
      "Type": "Pass",
      "Parameters": {
        "part.$": "States.ArrayPartition($.proc.arr, $.proc.y)",
        "y.$": "$.proc.y"
      },
      "ResultPath": "$.proc",
      "Next": "Remainder"
    },
    "Remainder": {
      "Type": "Pass",
      "Parameters": {
        "rem.$": "States.ArrayLength(States.ArrayGetItem($.proc.part, States.MathAdd(States.ArrayLength($.proc.part), -1)))",
        "y.$": "$.proc.y"
      },
      "ResultPath": "$.proc",
      "Next": "CheckRem"
    },
    "CheckRem": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.proc.rem",
          "NumericEqualsPath": "$.proc.y",
          "Next": "NotPrime"
        }
      ],
      "Default": "NextY"
    },
    "NextY": {
      "Type": "Pass",
      "Parameters": {
        "y.$": "States.MathAdd($.proc.y,1)",
        "doubley.$": "States.MathAdd(States.MathAdd($.proc.y,$.proc.y), 2)"
      },
      "Next": "ShouldCheckY",
      "ResultPath": "$.proc"
    },
    "ShouldCheckY": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.proc.doubley",
          "NumericLessThanPath": "$.x",
          "Next": "Range"
        }
      ],
      "Default": "FoundPrime"
    },
    "NotPrime": {
      "Type": "Pass",
      "Next": "HasToken",
      "ResultPath": "$.output",
      "Parameters": {
        "x.$": "$.x",
        "prime": false
      }
    },
    "FoundPrime": {
      "Type": "Pass",
      "Parameters": {
        "x.$": "$.x",
        "prime": true
      },
      "Next": "HasToken",
      "ResultPath": "$.output"
    },
    "HasToken": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.taskToken",
          "IsPresent": true,
          "Next": "SendResult"
        }
      ],
      "Default": "Make output"
    },
    "Make output": {
      "Type": "Pass",
      "End": true,
      "OutputPath": "$.output"
    },
    "SendResult": {
      "Type": "Task",
      "End": true,
      "Parameters": {
        "Output.$": "States.JsonToString($.output)",
        "TaskToken.$": "$.taskToken"
      },
      "Resource": "arn:aws:states:::aws-sdk:sfn:sendTaskSuccess",
      "ResultPath": null,
      "OutputPath": "$.output"
    }
  }
}
